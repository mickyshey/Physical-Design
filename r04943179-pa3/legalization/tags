!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ARGHANDLER_H	src/PlaceCommon/arghandler.h	2;"	d
ASSERT	src/PlaceCommon/Util.h	23;"	d
ASSERTCRASH	src/PlaceCommon/Util.h	17;"	d
BOOKSHELFPARSER_H	src/Parser/BookshelfParser.h	2;"	d
BookshelfParser	src/Parser/BookshelfParser.cpp	/^BookshelfParser::BookshelfParser(Placement &placement)$/;"	f	class:BookshelfParser
BookshelfParser	src/Parser/BookshelfParser.h	/^class BookshelfParser$/;"	c
CArgHandler	src/PlaceCommon/arghandler.cpp	/^CArgHandler::CArgHandler()$/;"	f	class:CArgHandler
CArgHandler	src/PlaceCommon/arghandler.h	/^class CArgHandler$/;"	c
CLegal	src/Legalizer/Legal.cpp	/^CLegal::CLegal( Placement& placement  ) :$/;"	f	class:CLegal
CLegal	src/Legalizer/Legal.h	/^class CLegal$/;"	c
CMAKE_BINARY_DIR	src/Gnuplot/Makefile	/^CMAKE_BINARY_DIR = \/home\/yslu\/html\/pd17\/legalization\/src$/;"	m
CMAKE_BINARY_DIR	src/Legalizer/Makefile	/^CMAKE_BINARY_DIR = \/home\/yslu\/html\/pd17\/legalization\/src$/;"	m
CMAKE_BINARY_DIR	src/Parser/Makefile	/^CMAKE_BINARY_DIR = \/home\/yslu\/html\/pd17\/legalization\/src$/;"	m
CMAKE_BINARY_DIR	src/PlaceCommon/Makefile	/^CMAKE_BINARY_DIR = \/home\/yslu\/html\/pd17\/legalization\/src$/;"	m
CMAKE_BINARY_DIR	src/Placement/Makefile	/^CMAKE_BINARY_DIR = \/home\/yslu\/html\/pd17\/legalization\/src$/;"	m
CMAKE_COMMAND	src/Gnuplot/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	src/Legalizer/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	src/Parser/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	src/PlaceCommon/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	src/Placement/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_EDIT_COMMAND	src/Gnuplot/Makefile	/^CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake$/;"	m
CMAKE_EDIT_COMMAND	src/Legalizer/Makefile	/^CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake$/;"	m
CMAKE_EDIT_COMMAND	src/Parser/Makefile	/^CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake$/;"	m
CMAKE_EDIT_COMMAND	src/PlaceCommon/Makefile	/^CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake$/;"	m
CMAKE_EDIT_COMMAND	src/Placement/Makefile	/^CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake$/;"	m
CMAKE_SOURCE_DIR	src/Gnuplot/Makefile	/^CMAKE_SOURCE_DIR = \/home\/yslu\/html\/pd17\/legalization\/src$/;"	m
CMAKE_SOURCE_DIR	src/Legalizer/Makefile	/^CMAKE_SOURCE_DIR = \/home\/yslu\/html\/pd17\/legalization\/src$/;"	m
CMAKE_SOURCE_DIR	src/Parser/Makefile	/^CMAKE_SOURCE_DIR = \/home\/yslu\/html\/pd17\/legalization\/src$/;"	m
CMAKE_SOURCE_DIR	src/PlaceCommon/Makefile	/^CMAKE_SOURCE_DIR = \/home\/yslu\/html\/pd17\/legalization\/src$/;"	m
CMAKE_SOURCE_DIR	src/Placement/Makefile	/^CMAKE_SOURCE_DIR = \/home\/yslu\/html\/pd17\/legalization\/src$/;"	m
CParamPlacement	src/PlaceCommon/ParamPlacement.cpp	/^CParamPlacement::CParamPlacement()$/;"	f	class:CParamPlacement
CParamPlacement	src/PlaceCommon/ParamPlacement.h	/^class CParamPlacement$/;"	c
CPoint	src/PlaceCommon/Util.h	/^        CPoint( double x, double y ){$/;"	f	class:CPoint
CPoint	src/PlaceCommon/Util.h	/^        CPoint() {};$/;"	f	class:CPoint
CPoint	src/PlaceCommon/Util.h	/^class CPoint$/;"	c
CheckExist	src/PlaceCommon/arghandler.cpp	/^bool CArgHandler::CheckExist( const string caption )$/;"	f	class:CArgHandler
DEBUGCODE	src/PlaceCommon/Util.h	28;"	d
Distance	src/PlaceCommon/Util.h	/^        static double Distance( const CPoint& p1,  const CPoint& p2 ){$/;"	f	class:CPoint
EQUALS	src/Gnuplot/Makefile	/^EQUALS = =$/;"	m
EQUALS	src/Legalizer/Makefile	/^EQUALS = =$/;"	m
EQUALS	src/Parser/Makefile	/^EQUALS = =$/;"	m
EQUALS	src/PlaceCommon/Makefile	/^EQUALS = =$/;"	m
EQUALS	src/Placement/Makefile	/^EQUALS = =$/;"	m
FindCaptionIndex	src/PlaceCommon/arghandler.cpp	/^int CArgHandler::FindCaptionIndex( const string caption )$/;"	f	class:CArgHandler
GNUPLOTLIVEPLOTTER_H	src/Gnuplot/GnuplotLivePlotter.h	2;"	d
GNUPLOTMATRIXPLOTTER_H	src/Gnuplot/GnuplotMatrixPlotter.h	2;"	d
GNUPLOTPLOTTER_H	src/Gnuplot/GnuplotPlotter.h	2;"	d
GnuplotLivePlotter	src/Gnuplot/GnuplotLivePlotter.cpp	/^GnuplotLivePlotter::GnuplotLivePlotter()$/;"	f	class:GnuplotLivePlotter
GnuplotLivePlotter	src/Gnuplot/GnuplotLivePlotter.h	/^class GnuplotLivePlotter$/;"	c
GnuplotMatrixPlotter	src/Gnuplot/GnuplotMatrixPlotter.cpp	/^GnuplotMatrixPlotter::GnuplotMatrixPlotter()$/;"	f	class:GnuplotMatrixPlotter
GnuplotMatrixPlotter	src/Gnuplot/GnuplotMatrixPlotter.h	/^class GnuplotMatrixPlotter$/;"	c
GnuplotPlotter	src/Gnuplot/GnuplotPlotter.cpp	/^GnuplotPlotter::GnuplotPlotter()$/;"	f	class:GnuplotPlotter
GnuplotPlotter	src/Gnuplot/GnuplotPlotter.h	/^class GnuplotPlotter$/;"	c
Greater	src/Placement/Row.h	/^    static bool Greater( const Row& r1, const Row& r2  )$/;"	f	class:Row
Init	src/PlaceCommon/arghandler.cpp	/^void CArgHandler::Init( const int argc, char* argv[] )$/;"	f	class:CArgHandler
IsDev	src/PlaceCommon/arghandler.h	/^        bool IsDev()         { return m_isDev;      };$/;"	f	class:CArgHandler
Lesser	src/Placement/Row.h	/^    static bool Lesser( const Row& r1, const Row& r2  )$/;"	f	class:Row
MODULE_H	src/Placement/Module.h	2;"	d
Module	src/Placement/Module.h	/^    Module(string name = "" , double width = -1, double height = -1, bool isFixed = false)$/;"	f	class:Module
Module	src/Placement/Module.h	/^class Module$/;"	c
NET_H	src/Placement/Net.h	2;"	d
Net	src/Placement/Net.h	/^    Net() {}$/;"	f	class:Net
Net	src/Placement/Net.h	/^class Net {$/;"	c
OR_E	src/Placement/Module.h	/^    enum Orient {OR_N, OR_W, OR_S, OR_E, OR_FN, OR_FW, OR_FS, OR_FE};$/;"	e	enum:Module::Orient
OR_E	src/Placement/Row.h	/^    enum Orient {OR_N, OR_W, OR_S, OR_E, OR_FN, OR_FW, OR_FS, OR_FE};$/;"	e	enum:Row::Orient
OR_FE	src/Placement/Module.h	/^    enum Orient {OR_N, OR_W, OR_S, OR_E, OR_FN, OR_FW, OR_FS, OR_FE};$/;"	e	enum:Module::Orient
OR_FE	src/Placement/Row.h	/^    enum Orient {OR_N, OR_W, OR_S, OR_E, OR_FN, OR_FW, OR_FS, OR_FE};$/;"	e	enum:Row::Orient
OR_FN	src/Placement/Module.h	/^    enum Orient {OR_N, OR_W, OR_S, OR_E, OR_FN, OR_FW, OR_FS, OR_FE};$/;"	e	enum:Module::Orient
OR_FN	src/Placement/Row.h	/^    enum Orient {OR_N, OR_W, OR_S, OR_E, OR_FN, OR_FW, OR_FS, OR_FE};$/;"	e	enum:Row::Orient
OR_FS	src/Placement/Module.h	/^    enum Orient {OR_N, OR_W, OR_S, OR_E, OR_FN, OR_FW, OR_FS, OR_FE};$/;"	e	enum:Module::Orient
OR_FS	src/Placement/Row.h	/^    enum Orient {OR_N, OR_W, OR_S, OR_E, OR_FN, OR_FW, OR_FS, OR_FE};$/;"	e	enum:Row::Orient
OR_FW	src/Placement/Module.h	/^    enum Orient {OR_N, OR_W, OR_S, OR_E, OR_FN, OR_FW, OR_FS, OR_FE};$/;"	e	enum:Module::Orient
OR_FW	src/Placement/Row.h	/^    enum Orient {OR_N, OR_W, OR_S, OR_E, OR_FN, OR_FW, OR_FS, OR_FE};$/;"	e	enum:Row::Orient
OR_N	src/Placement/Module.h	/^    enum Orient {OR_N, OR_W, OR_S, OR_E, OR_FN, OR_FW, OR_FS, OR_FE};$/;"	e	enum:Module::Orient
OR_N	src/Placement/Row.h	/^    enum Orient {OR_N, OR_W, OR_S, OR_E, OR_FN, OR_FW, OR_FS, OR_FE};$/;"	e	enum:Row::Orient
OR_S	src/Placement/Module.h	/^    enum Orient {OR_N, OR_W, OR_S, OR_E, OR_FN, OR_FW, OR_FS, OR_FE};$/;"	e	enum:Module::Orient
OR_S	src/Placement/Row.h	/^    enum Orient {OR_N, OR_W, OR_S, OR_E, OR_FN, OR_FW, OR_FS, OR_FE};$/;"	e	enum:Row::Orient
OR_W	src/Placement/Module.h	/^    enum Orient {OR_N, OR_W, OR_S, OR_E, OR_FN, OR_FW, OR_FS, OR_FE};$/;"	e	enum:Module::Orient
OR_W	src/Placement/Row.h	/^    enum Orient {OR_N, OR_W, OR_S, OR_E, OR_FN, OR_FW, OR_FS, OR_FE};$/;"	e	enum:Row::Orient
Orient	src/Placement/Module.h	/^    enum Orient {OR_N, OR_W, OR_S, OR_E, OR_FN, OR_FW, OR_FS, OR_FE};$/;"	g	class:Module
Orient	src/Placement/Row.h	/^    enum Orient {OR_N, OR_W, OR_S, OR_E, OR_FN, OR_FW, OR_FS, OR_FE};$/;"	g	class:Row
PARAMPLACEMENT_H	src/PlaceCommon/ParamPlacement.h	2;"	d
PIN_H	src/Placement/Pin.h	2;"	d
PLACEMENT_H	src/Placement/Placement.h	2;"	d
Pin	src/Placement/Pin.h	/^    Pin(unsigned moduleId = -1, unsigned netId = -1, double xOffset = -1, double yOffset = -1)$/;"	f	class:Pin
Pin	src/Placement/Pin.h	/^class Pin$/;"	c
Placement	src/Placement/Placement.cpp	/^Placement::Placement()$/;"	f	class:Placement
Placement	src/Placement/Placement.h	/^class Placement$/;"	c
Print	src/PlaceCommon/Util.h	/^        void Print(){$/;"	f	class:CPoint
RECTANGLE_H	src/Placement/Rectangle.h	2;"	d
RM	src/Gnuplot/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	src/Legalizer/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	src/Parser/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	src/PlaceCommon/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	src/Placement/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
ROW_H	src/Placement/Row.h	2;"	d
Rectangle	src/Placement/Rectangle.h	/^    Rectangle(double left = 0, double bottom = 0, double right = 0, double top = 0)$/;"	f	class:Rectangle
Rectangle	src/Placement/Rectangle.h	/^class Rectangle$/;"	c
Row	src/Placement/Row.h	/^    Row( double& set_bottom,  double& set_height,  double& set_step ) :$/;"	f	class:Row
Row	src/Placement/Row.h	/^    Row(double x = -1, double y = -1, double height = -1, double siteSpacing = -1,$/;"	f	class:Row
Row	src/Placement/Row.h	/^class Row$/;"	c
SCALE_TO_LEFT	src/PlaceCommon/ParamPlacement.h	/^SCALE_TO_LEFT,$/;"	e	enum:SCALE_TYPE
SCALE_TO_LEFT_BETWEEN_MACRO	src/PlaceCommon/ParamPlacement.h	/^SCALE_TO_LEFT_BETWEEN_MACRO,$/;"	e	enum:SCALE_TYPE
SCALE_TO_MIDLINE	src/PlaceCommon/ParamPlacement.h	/^SCALE_TO_MIDLINE,$/;"	e	enum:SCALE_TYPE
SCALE_TO_MIDLINE_BETWEEN_MACRO	src/PlaceCommon/ParamPlacement.h	/^SCALE_TO_MIDLINE_BETWEEN_MACRO$/;"	e	enum:SCALE_TYPE
SCALE_TO_RIGHT	src/PlaceCommon/ParamPlacement.h	/^SCALE_TO_RIGHT,$/;"	e	enum:SCALE_TYPE
SCALE_TO_RIGHT_BETWEEN_MACRO	src/PlaceCommon/ParamPlacement.h	/^SCALE_TO_RIGHT_BETWEEN_MACRO,$/;"	e	enum:SCALE_TYPE
SCALE_TYPE	src/PlaceCommon/ParamPlacement.h	/^enum SCALE_TYPE$/;"	g
SHELL	src/Gnuplot/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	src/Legalizer/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	src/Parser/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	src/PlaceCommon/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	src/Placement/Makefile	/^SHELL = \/bin\/sh$/;"	m
SUFFIXES	src/Gnuplot/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	src/Legalizer/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	src/Parser/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	src/PlaceCommon/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	src/Placement/Makefile	/^SUFFIXES =$/;"	m
UTIL_H	src/PlaceCommon/Util.h	2;"	d
XDistance	src/PlaceCommon/Util.h	/^        static double XDistance( const CPoint& p1,  const CPoint& p2 ){$/;"	f	class:CPoint
_CLEGAL_	src/Legalizer/Legal.h	2;"	d
_autoFit	src/Gnuplot/GnuplotLivePlotter.h	/^    bool _autoFit;$/;"	m	class:GnuplotLivePlotter
_autoFit	src/Gnuplot/GnuplotPlotter.h	/^    bool _autoFit;$/;"	m	class:GnuplotPlotter
_bottom	src/Placement/Rectangle.h	/^    double _bottom;$/;"	m	class:Rectangle
_boundaryBottom	src/Placement/Placement.h	/^    double _boundaryBottom;$/;"	m	class:Placement
_boundaryLeft	src/Placement/Placement.h	/^    double _boundaryLeft;$/;"	m	class:Placement
_boundaryRight	src/Placement/Placement.h	/^    double _boundaryRight;$/;"	m	class:Placement
_boundaryTop	src/Placement/Placement.h	/^    double _boundaryTop;$/;"	m	class:Placement
_fpipe	src/Gnuplot/GnuplotLivePlotter.h	/^    FILE *_fpipe;$/;"	m	class:GnuplotLivePlotter
_height	src/Placement/Module.h	/^    double _width, _height;$/;"	m	class:Module
_height	src/Placement/Row.h	/^    double _height; \/\/ hieght of row$/;"	m	class:Row
_isFixed	src/Placement/Module.h	/^    bool _isFixed;$/;"	m	class:Module
_isSymmetric	src/Placement/Row.h	/^    bool _isSymmetric; \/\/ symmetry$/;"	m	class:Row
_left	src/Placement/Rectangle.h	/^    double _left;$/;"	m	class:Rectangle
_loadplname	src/Placement/Placement.h	/^    string _loadplname;$/;"	m	class:Placement
_matrix	src/Gnuplot/GnuplotMatrixPlotter.h	/^    vector<double> _matrix;$/;"	m	class:GnuplotMatrixPlotter
_moduleId	src/Placement/Pin.h	/^    unsigned _moduleId; \/\/ id of the associated module$/;"	m	class:Pin
_modules	src/Placement/Placement.h	/^    vector<Module> _modules;$/;"	m	class:Placement
_name	src/Placement/Module.h	/^    string _name;$/;"	m	class:Module
_name	src/Placement/Placement.h	/^    string _name;$/;"	m	class:Placement
_netId	src/Placement/Pin.h	/^    unsigned _netId;    \/\/ id of the associated net$/;"	m	class:Pin
_nets	src/Placement/Placement.h	/^    vector<Net> _nets;$/;"	m	class:Placement
_nodeNameToModuleId	src/Parser/BookshelfParser.h	/^    map<string, unsigned> _nodeNameToModuleId;$/;"	m	class:BookshelfParser
_numCols	src/Gnuplot/GnuplotMatrixPlotter.h	/^    unsigned _numCols;$/;"	m	class:GnuplotMatrixPlotter
_numRows	src/Gnuplot/GnuplotMatrixPlotter.h	/^    unsigned _numRows;$/;"	m	class:GnuplotMatrixPlotter
_numSites	src/Placement/Row.h	/^    unsigned _numSites; \/\/ number of sites$/;"	m	class:Row
_orient	src/Placement/Module.h	/^    Orient _orient;$/;"	m	class:Module
_orient	src/Placement/Row.h	/^    Orient _orient; \/\/ orient$/;"	m	class:Row
_pPins	src/Placement/Module.h	/^    vector<Pin*> _pPins;$/;"	m	class:Module
_pPins	src/Placement/Net.h	/^    vector<Pin *> _pPins;$/;"	m	class:Net
_pinId	src/Placement/Pin.h	/^    unsigned _pinId;    \/\/ Pin Id$/;"	m	class:Pin
_pins	src/Placement/Placement.h	/^    vector<Pin> _pins;$/;"	m	class:Placement
_placement	src/Legalizer/Legal.h	/^        Placement& _placement;$/;"	m	class:CLegal
_placement	src/Parser/BookshelfParser.h	/^    Placement& _placement;$/;"	m	class:BookshelfParser
_rectangleChip	src/Placement/Placement.h	/^    Rectangle _rectangleChip;$/;"	m	class:Placement
_rectangles	src/Gnuplot/GnuplotLivePlotter.h	/^    vector<Rectangle> _rectangles;$/;"	m	class:GnuplotLivePlotter
_rectangles	src/Gnuplot/GnuplotPlotter.h	/^    vector<Rectangle> _rectangles;$/;"	m	class:GnuplotPlotter
_right	src/Placement/Rectangle.h	/^    double _right;$/;"	m	class:Rectangle
_rowHeight	src/Placement/Placement.h	/^    double _rowHeight;$/;"	m	class:Placement
_rows	src/Placement/Placement.h	/^    vector<Row> _rows;$/;"	m	class:Placement
_siteSpacing	src/Placement/Row.h	/^    double _siteSpacing; \/\/ distance between the beginings of neighboring sites$/;"	m	class:Row
_title	src/Gnuplot/GnuplotLivePlotter.h	/^    string _title;$/;"	m	class:GnuplotLivePlotter
_title	src/Gnuplot/GnuplotMatrixPlotter.h	/^    string _title;$/;"	m	class:GnuplotMatrixPlotter
_title	src/Gnuplot/GnuplotPlotter.h	/^    string _title;$/;"	m	class:GnuplotPlotter
_top	src/Placement/Rectangle.h	/^    double _top;$/;"	m	class:Rectangle
_width	src/Placement/Module.h	/^    double _width, _height;$/;"	m	class:Module
_x	src/Placement/Module.h	/^    double _x, _y; \/\/ low x and low y$/;"	m	class:Module
_x	src/Placement/Pin.h	/^    double _x, _y;   \/\/ absolute x and y$/;"	m	class:Pin
_x	src/Placement/Row.h	/^    double _x, _y; \/\/ low x and low y$/;"	m	class:Row
_xOffset	src/Placement/Pin.h	/^    double _xOffset, _yOffset; \/\/ offsets from the center of the module$/;"	m	class:Pin
_y	src/Placement/Module.h	/^    double _x, _y; \/\/ low x and low y$/;"	m	class:Module
_y	src/Placement/Pin.h	/^    double _x, _y;   \/\/ absolute x and y$/;"	m	class:Pin
_y	src/Placement/Row.h	/^    double _x, _y; \/\/ low x and low y$/;"	m	class:Row
_yOffset	src/Placement/Pin.h	/^    double _xOffset, _yOffset; \/\/ offsets from the center of the module$/;"	m	class:Pin
addModule	src/Placement/Placement.h	/^    void addModule(const Module &module) {_modules.push_back(module);}$/;"	f	class:Placement
addPin	src/Placement/Module.h	/^    void addPin(Pin *pPin) {_pPins.push_back(pPin);}$/;"	f	class:Module
addPin	src/Placement/Net.h	/^    void addPin(Pin *pPin) {_pPins.push_back(pPin);}$/;"	f	class:Net
addPin	src/Placement/Placement.h	/^    void addPin(const Pin &pin) {_pins.push_back(pin),_pins.back().setPinId(_pins.size());}$/;"	f	class:Placement
addRectangle	src/Gnuplot/GnuplotLivePlotter.cpp	/^void GnuplotLivePlotter::addRectangle(const Rectangle &rectangle)$/;"	f	class:GnuplotLivePlotter
addRectangle	src/Gnuplot/GnuplotPlotter.cpp	/^void GnuplotPlotter::addRectangle(const Rectangle &rectangle)$/;"	f	class:GnuplotPlotter
addRow	src/Placement/Placement.h	/^    void addRow(const Row &row) {_rows.push_back(row);}$/;"	f	class:Placement
area	src/Placement/Module.h	/^    double area() {return _width * _height;}$/;"	f	class:Module
auxFilename	src/PlaceCommon/ParamPlacement.h	/^    string auxFilename;$/;"	m	class:CParamPlacement
bRunDetail	src/PlaceCommon/ParamPlacement.h	/^    bool bRunDetail;$/;"	m	class:CParamPlacement
bRunGlobal	src/PlaceCommon/ParamPlacement.h	/^    bool bRunGlobal;$/;"	m	class:CParamPlacement
bRunLegal	src/PlaceCommon/ParamPlacement.h	/^    bool bRunLegal;$/;"	m	class:CParamPlacement
bottom	src/Placement/Rectangle.h	/^    double bottom() const {return _bottom;}$/;"	f	class:Rectangle
boundaryBottom	src/Placement/Placement.h	/^    double boundaryBottom() {return _boundaryBottom;}$/;"	f	class:Placement
boundaryLeft	src/Placement/Placement.h	/^    double boundaryLeft() {return _boundaryLeft;}$/;"	f	class:Placement
boundaryRight	src/Placement/Placement.h	/^    double boundaryRight() {return _boundaryRight;}$/;"	f	class:Placement
boundaryTop	src/Placement/Placement.h	/^    double boundaryTop() {return _boundaryTop;}$/;"	f	class:Placement
centerX	src/Placement/Module.h	/^    double centerX() {return _x + _width\/2;}$/;"	f	class:Module
centerX	src/Placement/Rectangle.h	/^    double centerX() const {return (_left + _right)\/2;}$/;"	f	class:Rectangle
centerY	src/Placement/Module.h	/^    double centerY() {return _y + _height\/2;}$/;"	f	class:Module
centerY	src/Placement/Rectangle.h	/^    double centerY() const {return (_bottom + _top)\/2;}$/;"	f	class:Rectangle
check	src/Legalizer/Legal.cpp	/^bool CLegal::check()$/;"	f	class:CLegal
clearModules	src/Placement/Placement.h	/^    void clearModules() {_modules.clear();}$/;"	f	class:Placement
clearNets	src/Placement/Placement.h	/^    void clearNets() {_nets.clear();}$/;"	f	class:Placement
clearObjects	src/Gnuplot/GnuplotLivePlotter.cpp	/^void GnuplotLivePlotter::clearObjects()$/;"	f	class:GnuplotLivePlotter
clearObjects	src/Gnuplot/GnuplotPlotter.cpp	/^void GnuplotPlotter::clearObjects()$/;"	f	class:GnuplotPlotter
clearPins	src/Placement/Module.h	/^    void clearPins() {_pPins.clear();}$/;"	f	class:Module
clearPins	src/Placement/Net.h	/^    void clearPins() {_pPins.clear();}$/;"	f	class:Net
clearPins	src/Placement/Placement.h	/^    void clearPins() {_pins.clear();}$/;"	f	class:Placement
clearRows	src/Placement/Placement.h	/^    void clearRows() {_rows.clear();}$/;"	f	class:Placement
computeHpwl	src/Placement/Placement.cpp	/^double Placement::computeHpwl()$/;"	f	class:Placement
computeTotalNetLength	src/Placement/Placement.cpp	/^double Placement::computeTotalNetLength(int cellid)$/;"	f	class:Placement
connectPinsWithModulesAndNets	src/Placement/Placement.cpp	/^void Placement::connectPinsWithModulesAndNets() {$/;"	f	class:Placement
debug	src/Gnuplot/GnuplotLivePlotter.cpp	/^void GnuplotLivePlotter::debug()$/;"	f	class:GnuplotLivePlotter
dtos	src/PlaceCommon/Util.cpp	/^string dtos(double num)$/;"	f
format	src/PlaceCommon/Util.cpp	/^string format(const char *fmt, ...)$/;"	f
gArg	src/PlaceCommon/arghandler.cpp	/^CArgHandler gArg;	\/\/ global variable$/;"	v
getCurrentMemoryUsage	src/PlaceCommon/Util.cpp	/^double getCurrentMemoryUsage()$/;"	f
getFileBasename	src/PlaceCommon/Util.cpp	/^string getFileBasename(string filePathName)$/;"	f
getFileName	src/PlaceCommon/Util.cpp	/^string getFileName(string filePathName)$/;"	f
getPeakMemoryUsage	src/PlaceCommon/Util.cpp	/^double getPeakMemoryUsage()$/;"	f
getRowHeight	src/Placement/Placement.h	/^    double getRowHeight() {return _rowHeight;}$/;"	f	class:Placement
gnuplotLivePlotter	src/Legalizer/Legal.h	/^        GnuplotLivePlotter gnuplotLivePlotter;$/;"	m	class:CLegal
height	src/Placement/Module.h	/^    double height() {return _height;}$/;"	f	class:Module
height	src/Placement/Rectangle.h	/^    double height() const {return _top - _bottom;}$/;"	f	class:Rectangle
height	src/Placement/Row.h	/^    double height() const {return _height;}$/;"	f	class:Row
isFixed	src/Placement/Module.h	/^    bool isFixed() {return _isFixed;} \/\/if fixed module, return true$/;"	f	class:Module
itos	src/PlaceCommon/Util.cpp	/^string itos(int num)$/;"	f
left	src/Placement/Rectangle.h	/^    double left() const {return _left;}$/;"	f	class:Rectangle
m_argc	src/PlaceCommon/arghandler.h	/^        int    m_argc;$/;"	m	class:CArgHandler
m_argv	src/PlaceCommon/arghandler.h	/^	char** m_argv;$/;"	m	class:CArgHandler
m_average_cell_width	src/Legalizer/Legal.h	/^        double m_average_cell_width;    \/\/Average standard cell width$/;"	m	class:CLegal
m_bestLocations	src/Legalizer/Legal.h	/^        vector<CPoint> m_bestLocations;	\/\/Record the best locations$/;"	m	class:CLegal
m_bestLocations_left	src/Legalizer/Legal.h	/^        vector<CPoint> m_bestLocations_left;$/;"	m	class:CLegal
m_best_sites	src/Legalizer/Legal.h	/^        vector<Row> m_best_sites;       \/\/Record the resulting sites of the best result$/;"	m	class:CLegal
m_best_sites_left	src/Legalizer/Legal.h	/^        vector<Row> m_best_sites_left;$/;"	m	class:CLegal
m_cell_order	src/Legalizer/Legal.h	/^        vector<int> m_cell_order; \/\/Used as legalization order$/;"	m	class:CLegal
m_chip_left_bound	src/Legalizer/Legal.h	/^        double m_chip_left_bound;	\/\/Record the chip left boundary$/;"	m	class:CLegal
m_free_sites	src/Legalizer/Legal.h	/^        vector<Row> m_free_sites; \/\/Record the unused sites$/;"	m	class:CLegal
m_globalLocations	src/Legalizer/Legal.h	/^        vector<CPoint> m_globalLocations;$/;"	m	class:CLegal
m_interval	src/Placement/Row.h	/^    vector<double> m_interval;$/;"	m	class:Row
m_isDev	src/PlaceCommon/arghandler.h	/^        bool   m_isDev;$/;"	m	class:CArgHandler
m_left_free_sites	src/Legalizer/Legal.h	/^        vector<Row> m_left_free_sites;$/;"	m	class:CLegal
m_macro_ids	src/Legalizer/Legal.h	/^        vector<int> m_macro_ids;$/;"	m	class:CLegal
m_macro_shifter_best_positions	src/Legalizer/Legal.h	/^        vector<CPoint> m_macro_shifter_best_positions;	\/\/Record the best macro positions (left-bottom)$/;"	m	class:CLegal
m_macro_shifter_orig_positions	src/Legalizer/Legal.h	/^        vector<CPoint> m_macro_shifter_orig_positions;	\/\/Record the original macro positions (left-bottom)$/;"	m	class:CLegal
m_max_module_height	src/Legalizer/Legal.h	/^        double m_max_module_height;$/;"	m	class:CLegal
m_max_module_width	src/Legalizer/Legal.h	/^        double m_max_module_width;$/;"	m	class:CLegal
m_origLocations	src/Legalizer/Legal.h	/^        vector<CPoint> m_origLocations;	\/\/Record the original locations$/;"	m	class:CLegal
m_orig_widths	src/Legalizer/Legal.h	/^        vector<double> m_orig_widths;$/;"	m	class:CLegal
m_process_list	src/Legalizer/Legal.h	/^        vector<int> m_process_list;    \/\/CalculateCellOrder() and CalculateNewLocation()$/;"	m	class:CLegal
m_site_bottom	src/Legalizer/Legal.h	/^        double m_site_bottom, m_site_height; \/\/Keep the bottom y coordinate of the sites and the$/;"	m	class:CLegal
m_site_height	src/Legalizer/Legal.h	/^        double m_site_bottom, m_site_height; \/\/Keep the bottom y coordinate of the sites and the$/;"	m	class:CLegal
m_sites	src/Placement/Placement.h	/^    vector<Row> m_sites; \/\/ for Legalization and Detailplace$/;"	m	class:Placement
m_unlegal_count	src/Legalizer/Legal.h	/^        int m_unlegal_count;            \/\/Number of unlegalized cells$/;"	m	class:CLegal
module	src/Placement/Placement.h	/^    Module& module(unsigned moduleId) {return _modules[moduleId];}$/;"	f	class:Placement
moduleId	src/Placement/Pin.h	/^    unsigned moduleId() {return _moduleId;}$/;"	f	class:Pin
modules_bak	src/Placement/Placement.h	/^    vector<Module> modules_bak; \/\/for Detailplace$/;"	m	class:Placement
moveDesignCenter	src/Placement/Placement.cpp	/^void Placement::moveDesignCenter(double xOffset, double yOffset)$/;"	f	class:Placement
name	src/Placement/Module.h	/^    string name() {return _name;}$/;"	f	class:Module
name	src/Placement/Placement.h	/^    string name() {return _name;}$/;"	f	class:Placement
net	src/Placement/Placement.h	/^    Net& net(unsigned netId) {return _nets[netId];}$/;"	f	class:Placement
netId	src/Placement/Pin.h	/^    unsigned netId() {return _netId;}$/;"	f	class:Pin
numModules	src/Placement/Placement.h	/^    unsigned numModules() {return _modules.size();}$/;"	f	class:Placement
numNets	src/Placement/Placement.h	/^    unsigned numNets() {return _nets.size();}$/;"	f	class:Placement
numPins	src/Placement/Module.h	/^    unsigned numPins() {return _pPins.size();}$/;"	f	class:Module
numPins	src/Placement/Net.h	/^    unsigned numPins() {return _pPins.size();}$/;"	f	class:Net
numPins	src/Placement/Placement.h	/^    unsigned numPins() {return _pins.size();}$/;"	f	class:Placement
numRows	src/Placement/Placement.h	/^    unsigned numRows() {return _rows.size();}$/;"	f	class:Placement
numSites	src/Placement/Row.h	/^    double numSites() const {return _numSites;}$/;"	f	class:Row
orient	src/Placement/Module.h	/^    Orient orient() {return _orient;}$/;"	f	class:Module
orientString	src/Placement/Module.h	/^    string orientString() {$/;"	f	class:Module
outputBookshelfFormat	src/Placement/Placement.cpp	/^void Placement::outputBookshelfFormat(string filePathName)$/;"	f	class:Placement
outputGnuplotFigure	src/Placement/Placement.cpp	/^void Placement::outputGnuplotFigure(string filePathName) {$/;"	f	class:Placement
outputPdfFigure	src/Placement/Placement.cpp	/^void Placement::outputPdfFigure(string filePathName) {$/;"	f	class:Placement
outputPdfFile	src/Gnuplot/GnuplotPlotter.cpp	/^void GnuplotPlotter::outputPdfFile(string filePathName)$/;"	f	class:GnuplotPlotter
outputPlotFile	src/Gnuplot/GnuplotMatrixPlotter.cpp	/^void GnuplotMatrixPlotter::outputPlotFile(string filePathName)$/;"	f	class:GnuplotMatrixPlotter
outputPlotFile	src/Gnuplot/GnuplotPlotter.cpp	/^void GnuplotPlotter::outputPlotFile(string filePathName)$/;"	f	class:GnuplotPlotter
outputPngFigure	src/Placement/Placement.cpp	/^void Placement::outputPngFigure(string filePathName) {$/;"	f	class:Placement
outputPngFile	src/Gnuplot/GnuplotMatrixPlotter.cpp	/^void GnuplotMatrixPlotter::outputPngFile(string filePathName)$/;"	f	class:GnuplotMatrixPlotter
outputPngFile	src/Gnuplot/GnuplotPlotter.cpp	/^void GnuplotPlotter::outputPngFile(string filePathName)$/;"	f	class:GnuplotPlotter
overlapArea	src/Placement/Rectangle.h	/^    static double overlapArea(const Rectangle &rect1, const Rectangle &rect2) {$/;"	f	class:Rectangle
pin	src/Placement/Module.h	/^    Pin& pin(unsigned index) {return *_pPins[index];}$/;"	f	class:Module
pin	src/Placement/Net.h	/^    Pin& pin(unsigned index) {return *_pPins[index];} \/\/ index: 0 ~ (numPins-1), not Pin id$/;"	f	class:Net
pin	src/Placement/Placement.h	/^    Pin& pin(unsigned pinId) {return _pins[pinId];}$/;"	f	class:Placement
pinId	src/Placement/Pin.h	/^    unsigned pinId() {return _pinId;}$/;"	f	class:Pin
plFilename	src/PlaceCommon/ParamPlacement.h	/^    string plFilename;$/;"	m	class:CParamPlacement
plname	src/Placement/Placement.h	/^    string plname() {return _loadplname;}$/;"	f	class:Placement
readAuxFile	src/Parser/BookshelfParser.cpp	/^bool BookshelfParser::readAuxFile(string filePathName)$/;"	f	class:BookshelfParser
readBookshelfFormat	src/Placement/Placement.cpp	/^void Placement::readBookshelfFormat(string filePathName, string plFileName)$/;"	f	class:Placement
readNetsFile	src/Parser/BookshelfParser.cpp	/^bool BookshelfParser::readNetsFile(string filePathName)$/;"	f	class:BookshelfParser
readNodesFile	src/Parser/BookshelfParser.cpp	/^bool BookshelfParser::readNodesFile(string filePathName)$/;"	f	class:BookshelfParser
readPlFile	src/Parser/BookshelfParser.cpp	/^bool BookshelfParser::readPlFile(string filePathName)$/;"	f	class:BookshelfParser
readSclFile	src/Parser/BookshelfParser.cpp	/^bool BookshelfParser::readSclFile(string filePathName)$/;"	f	class:BookshelfParser
rectangle	src/Placement/Module.h	/^    Rectangle rectangle() { return Rectangle(_x, _y, _x+_width, _y+_height);}\/\/module rectangle$/;"	f	class:Module
rectangleChip	src/Placement/Placement.h	/^    Rectangle rectangleChip() {return _rectangleChip;}  \/\/Chip rectangle$/;"	f	class:Placement
right	src/Placement/Rectangle.h	/^    double right() const {return _right;}$/;"	f	class:Rectangle
row	src/Placement/Placement.h	/^    Row& row(unsigned rowId) {return _rows[rowId];}$/;"	f	class:Placement
saveGlobalResult	src/Legalizer/Legal.cpp	/^void CLegal::saveGlobalResult()$/;"	f	class:CLegal
seconds	src/PlaceCommon/Util.h	/^inline double seconds()$/;"	f
setAutoFit	src/Gnuplot/GnuplotLivePlotter.h	/^    void setAutoFit(bool autoFit) {_autoFit = autoFit;}$/;"	f	class:GnuplotLivePlotter
setAutoFit	src/Gnuplot/GnuplotPlotter.h	/^    void setAutoFit(bool autoFit) {_autoFit = autoFit;}$/;"	f	class:GnuplotPlotter
setBounds	src/Placement/Rectangle.h	/^    void setBounds(double left, double bottom, double right, double top) {$/;"	f	class:Rectangle
setCenterPosition	src/Placement/Module.h	/^    void setCenterPosition(double x, double y) {$/;"	f	class:Module
setHeight	src/Placement/Module.h	/^    void setHeight(double height) {$/;"	f	class:Module
setHeight	src/Placement/Row.h	/^    void setHeight(double height) {$/;"	f	class:Row
setIsFixed	src/Placement/Module.h	/^    void setIsFixed(bool isFixed) {$/;"	f	class:Module
setIsSymmetric	src/Placement/Row.h	/^    void setIsSymmetric(bool isSymmetric) {$/;"	f	class:Row
setLegalResult	src/Legalizer/Legal.cpp	/^void CLegal::setLegalResult()$/;"	f	class:CLegal
setMatrix	src/Gnuplot/GnuplotMatrixPlotter.cpp	/^void GnuplotMatrixPlotter::setMatrix(vector<double> &matrix, unsigned numRows, unsigned numCols)$/;"	f	class:GnuplotMatrixPlotter
setModuleId	src/Placement/Pin.h	/^    void setModuleId(unsigned moduleId) {$/;"	f	class:Pin
setName	src/Placement/Module.h	/^    void setName(const string &name) {$/;"	f	class:Module
setNetId	src/Placement/Pin.h	/^    void setNetId(unsigned netId) {$/;"	f	class:Pin
setNumModules	src/Placement/Placement.h	/^    void setNumModules(unsigned size) {_modules.resize(size);}$/;"	f	class:Placement
setNumNets	src/Placement/Placement.h	/^    void setNumNets(unsigned size) {_nets.resize(size);}$/;"	f	class:Placement
setNumPins	src/Placement/Module.h	/^    void setNumPins(unsigned numPins) {_pPins.resize(numPins);}$/;"	f	class:Module
setNumPins	src/Placement/Net.h	/^    void setNumPins(unsigned numPins) {_pPins.resize(numPins);}$/;"	f	class:Net
setNumPins	src/Placement/Placement.h	/^    void setNumPins(unsigned size) {_pins.resize(size);}$/;"	f	class:Placement
setNumRows	src/Placement/Placement.h	/^    void setNumRows(unsigned size) {_rows.resize(size);}$/;"	f	class:Placement
setNumSites	src/Placement/Row.h	/^    void setNumSites(unsigned numSites) {$/;"	f	class:Row
setOffset	src/Placement/Pin.h	/^    void setOffset(double xOffset, double yOffset) {$/;"	f	class:Pin
setOrient	src/Placement/Module.h	/^    void setOrient(Orient orient) {$/;"	f	class:Module
setOrient	src/Placement/Row.h	/^    void setOrient(Orient orient) {$/;"	f	class:Row
setPinId	src/Placement/Pin.h	/^    void setPinId(unsigned pinId) {$/;"	f	class:Pin
setPosition	src/Placement/Module.h	/^    void setPosition(double x, double y) { \/\/would update the pin positions when you set new position$/;"	f	class:Module
setPosition	src/Placement/Pin.h	/^    void setPosition(double x, double y) {$/;"	f	class:Pin
setPosition	src/Placement/Row.h	/^    void setPosition(double x, double y) {$/;"	f	class:Row
setSiteSpacing	src/Placement/Row.h	/^    void setSiteSpacing(double siteSpacing) {$/;"	f	class:Row
setTitle	src/Gnuplot/GnuplotLivePlotter.cpp	/^void GnuplotLivePlotter::setTitle(string title)$/;"	f	class:GnuplotLivePlotter
setTitle	src/Gnuplot/GnuplotPlotter.cpp	/^void GnuplotPlotter::setTitle(string title)$/;"	f	class:GnuplotPlotter
setWidth	src/Placement/Module.h	/^    void setWidth(double width) {$/;"	f	class:Module
show	src/Gnuplot/GnuplotLivePlotter.cpp	/^void GnuplotLivePlotter::show()$/;"	f	class:GnuplotLivePlotter
siteSpacing	src/Placement/Row.h	/^    double siteSpacing() const {return _siteSpacing;}$/;"	f	class:Row
solve	src/Legalizer/Legal.cpp	/^bool CLegal::solve()$/;"	f	class:CLegal
sortModule	src/Legalizer/Legal.cpp	/^bool sortModule( Module* a, Module* b)$/;"	f
threadNum	src/PlaceCommon/ParamPlacement.h	/^    int threadNum;$/;"	m	class:CParamPlacement
title	src/Gnuplot/GnuplotLivePlotter.h	/^    string title() {return _title;}$/;"	f	class:GnuplotLivePlotter
title	src/Gnuplot/GnuplotPlotter.h	/^    string title() {return _title;}$/;"	f	class:GnuplotPlotter
top	src/Placement/Rectangle.h	/^    double top() const {return _top;}$/;"	f	class:Rectangle
totalDisplacement	src/Legalizer/Legal.cpp	/^double CLegal::totalDisplacement()$/;"	f	class:CLegal
updateDesignStatistics	src/Placement/Placement.cpp	/^void Placement::updateDesignStatistics()$/;"	f	class:Placement
updatePinPositions	src/Placement/Module.h	/^    void updatePinPositions() {$/;"	f	class:Module
width	src/Placement/Module.h	/^    double width() {return _width;}$/;"	f	class:Module
width	src/Placement/Rectangle.h	/^    double width() const {return _right - _left;}$/;"	f	class:Rectangle
width	src/Placement/Row.h	/^    double width() const {return _numSites*_siteSpacing;}$/;"	f	class:Row
x	src/PlaceCommon/Util.h	/^        double x, y;$/;"	m	class:CPoint
x	src/Placement/Module.h	/^    double x() {return _x;} \/\/x coordinates$/;"	f	class:Module
x	src/Placement/Pin.h	/^    double x() {return _x;}$/;"	f	class:Pin
x	src/Placement/Row.h	/^    double x() const {return _x;}$/;"	f	class:Row
xOffset	src/Placement/Pin.h	/^    double xOffset() {return _xOffset;}$/;"	f	class:Pin
y	src/PlaceCommon/Util.h	/^        double x, y;$/;"	m	class:CPoint
y	src/Placement/Module.h	/^    double y() {return _y;} \/\/y coordinates \/\/(x,y): lower-left point of the block$/;"	f	class:Module
y	src/Placement/Pin.h	/^    double y() {return _y;}$/;"	f	class:Pin
y	src/Placement/Row.h	/^    double y() const {return _y;}$/;"	f	class:Row
yOffset	src/Placement/Pin.h	/^    double yOffset() {return _yOffset;}$/;"	f	class:Pin
~CArgHandler	src/PlaceCommon/arghandler.cpp	/^CArgHandler::~CArgHandler()$/;"	f	class:CArgHandler
~CLegal	src/Legalizer/Legal.h	/^       ~CLegal(void){}$/;"	f	class:CLegal
~GnuplotLivePlotter	src/Gnuplot/GnuplotLivePlotter.cpp	/^GnuplotLivePlotter::~GnuplotLivePlotter()$/;"	f	class:GnuplotLivePlotter
